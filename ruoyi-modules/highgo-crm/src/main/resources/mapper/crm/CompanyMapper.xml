<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.highgo.crm.mapper.CompanyMapper">

    <resultMap type="Company" id="CompanyResult">
        <result property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="companyName" column="company_name"/>
        <result property="properties" column="properties"/>
        <result property="industry" column="industry"/>
        <result property="industryCategory" column="industry_category"/>
        <result property="industrySubcategory" column="industry_subcategory"/>
        <result property="legal" column="legal"/>
        <result property="capitalReg" column="capital_reg"/>
        <result property="capitalPayType" column="capital_pay_type"/>
        <result property="sourceType" column="source_type"/>
        <result property="website" column="website"/>
        <result property="addr" column="addr"/>
        <result property="addrDetail" column="addr_detail"/>
        <result property="zipCode" column="zip_code"/>
        <result property="businessScope" column="business_scope"/>
        <result property="remark" column="remark"/>
        <result property="sourceId" column="source_id"/>
        <result property="ownerId" column="owner_id"/>
        <result property="ownerName" column="owner_Name"/>
        <result property="nickName" column="nick_Name"/>
        <result property="deptId" column="dept_id"/>
        <result property="deptName" column="dept_Name"/>
        <result property="createId" column="create_id"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateId" column="update_id"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="englishName" column="english_name"/>
        <result property="taxCode" column="tax_code"/>
        <result property="emails" column="emails"/>
        <result property="phone" column="phone"/>
        <result property="regNumber" column="reg_number"/>
        <result property="orgNumber" column="org_number"/>
        <result property="creditCode" column="credit_code"/>
    </resultMap>

    <sql id="selectCompanyVo">
        select tc.id,
               tc.code,
               tc.company_name,
               tc.english_name,
               tc.tax_code,
               tc.emails,
               tc.phone,
               tc.reg_number,
               tc.org_number,
               tc.credit_code,
               tc.properties,
               tc.industry,
               tc.industry_category,
               tc.industry_subcategory,
               tc.legal,
               tc.capital_reg,
               tc.capital_pay_type,
               tc.source_type,
               tc.website,
               tc.addr,
               tc.addr_detail,
               tc.zip_code,
               tc.business_scope,
               tc.remark,
               tc.source_id,
               tc.owner_id,
               su.nick_name,
               su.user_name owner_name,
               tc.dept_id,
               sd.dept_name dept_name,
               tc.create_id,
               tc.create_by,
               tc.create_time,
               tc.update_id,
               tc.update_by,
               tc.update_time
        from t_company tc
                 left join remote_db.sys_dept sd on
            tc.dept_id = sd.dept_id
                 left join remote_db.sys_user su on
            su.user_id = tc.owner_id
    </sql>

    <select id="selectCompanyList" parameterType="Company" resultMap="CompanyResult">
        <include refid="selectCompanyVo"/>
        <where>
            <if test="code != null  and code != ''">and tc.code like concat('%', #{code}, '%')</if>
            <if test="companyName != null  and companyName != ''">and tc.company_name like concat('%', #{companyName},
                '%')
            </if>
            <if test="properties != null  and properties != ''">and tc.properties like concat('%', #{properties}, '%')
            </if>
            <if test="industry != null  and industry != ''">and tc.industry like concat('%', #{industry}, '%')</if>
            <if test="industryCategory != null  and industryCategory != ''">and tc.industry_category = #{industryCategory}</if>
            <if test="industrySubcategory != null  and industrySubcategory != ''">and tc.industry_subcategory = #{industrySubcategory}</if>
            <if test="legal != null  and legal != ''">and tc.legal like concat('%', #{legal}, '%')</if>
            <if test="capitalReg != null  and capitalReg != ''">and tc.capital_reg = #{capitalReg}</if>
            <if test="capitalPayType != null  and capitalPayType != ''">and tc.capital_pay_type = #{capitalPayType}</if>
            <if test="sourceType != null  and sourceType != ''">and tc.source_type = #{sourceType}</if>
            <if test="website != null  and website != ''">and tc.website = #{website}</if>
            <if test="addr != null  and addr != ''">and tc.addr = #{addr}</if>
            <if test="addrDetail != null  and addrDetail != ''">and tc.addr_detail = #{addrDetail}</if>
            <if test="businessScope != null  and businessScope != ''">and tc.business_scope like concat('%',
                #{businessScope}, '%')
            </if>
            <if test="remark != null  and remark != ''">and tc.remark = #{remark}</if>
            <if test="sourceId != null  and sourceId != ''">and tc.source_id = #{sourceId}</if>
            <if test="ownerId != null  and ownerId != ''">and tc.owner_id = #{ownerId}</if>
            <if test="deptId != null  and deptId != ''">and tc.dept_id = #{deptId}</if>
            <if test="createId != null  and createId != ''">and tc.create_id = #{createId}</if>
            <if test="createBy != null  and createBy != ''">and tc.create_by = #{createBy}</if>
            <if test="createTime != null ">and tc.create_time = #{createTime}</if>
            <if test="updateId != null  and updateId != ''">and tc.update_id = #{updateId}</if>
            <if test="updateBy != null  and updateBy != ''">and tc.update_by = #{updateBy}</if>
            <if test="updateTime != null ">and tc.update_time = #{updateTime}</if>
            <if test="params.deptIds != null and params.deptIds !=''">
                and tc.dept_id in
                <foreach collection="params.deptIds.split(',')" separator="," item="deptId" index="index" close=")"
                         open="(">
                    #{deptId}
                </foreach>
            </if>
            <if test="params.createBys != null and params.createBys !=''">
                and tc.create_by in
                <foreach collection="params.createBys.split(',')" separator="," item="createBy" index="index" close=")"
                         open="(">
                    #{createBy}
                </foreach>
            </if>
            <if test="params.ownerIds != null and params.ownerIds !=''">
                and tc.owner_id in
                <foreach collection="params.ownerIds.split(',')" separator="," item="ownerId" index="index" close=")"
                         open="(">
                    #{ownerId}
                </foreach>
            </if>
            <if test="params.beginCreateDate != null and params.beginCreateDate != '' and params.endCreateDate != null and params.endCreateDate != ''">
                and tc.create_time between #{params.beginCreateDate} and #{params.endCreateDate}
            </if>

            ${params.crmDataScope}
        </where>
    </select>

    <select id="selectCompanyById" parameterType="String" resultMap="CompanyResult">
        <include refid="selectCompanyVo"/>
        where tc.id = #{id}
    </select>

    <insert id="insertCompany" parameterType="Company">
        insert into t_company
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="code != null">code,</if>
            <if test="companyName != null">company_name,</if>
            <if test="properties != null">properties,</if>
            <if test="industry != null">industry,</if>
            <if test="industryCategory != null">industry_category,</if>
            <if test="industrySubcategory != null">industry_subcategory,</if>
            <if test="legal != null">legal,</if>
            <if test="capitalReg != null">capital_reg,</if>
            <if test="capitalPayType != null">capital_pay_type,</if>
            <if test="sourceType != null">source_type,</if>
            <if test="website != null">website,</if>
            <if test="addr != null">addr,</if>
            <if test="addrDetail != null">addr_detail,</if>
            <if test="zipCode != null">zip_code,</if>
            <if test="businessScope != null">business_scope,</if>
            <if test="remark != null">remark,</if>
            <if test="sourceId != null">source_id,</if>
            <if test="ownerId != null">owner_id,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="createId != null">create_id,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateId != null">update_id,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="englishName != null">english_name,</if>
            <if test="taxCode != null">tax_code,</if>
            <if test="emails != null">emails,</if>
            <if test="phone != null">phone,</if>
            <if test="regNumber != null">reg_number,</if>
            <if test="orgNumber != null">org_number,</if>
            <if test="creditCode != null">credit_code,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="code != null">#{code},</if>
            <if test="companyName != null">#{companyName},</if>
            <if test="properties != null">#{properties},</if>
            <if test="industry != null">#{industry},</if>
            <if test="industryCategory != null">#{industryCategory},</if>
            <if test="industrySubcategory != null">#{industrySubcategory},</if>
            <if test="legal != null">#{legal},</if>
            <if test="capitalReg != null">#{capitalReg},</if>
            <if test="capitalPayType != null">#{capitalPayType},</if>
            <if test="sourceType != null">#{sourceType},</if>
            <if test="website != null">#{website},</if>
            <if test="addr != null">#{addr},</if>
            <if test="addrDetail != null">#{addrDetail},</if>
            <if test="zipCode != null">#{zipCode},</if>
            <if test="businessScope != null">#{businessScope},</if>
            <if test="remark != null">#{remark},</if>
            <if test="sourceId != null">#{sourceId},</if>
            <if test="ownerId != null">#{ownerId},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="createId != null">#{createId},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateId != null">#{updateId},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="englishName != null">#{englishName},</if>
            <if test="taxCode != null">#{taxCode},</if>
            <if test="emails != null">#{emails},</if>
            <if test="phone != null">#{phone},</if>
            <if test="regNumber != null">#{regNumber},</if>
            <if test="orgNumber != null">#{orgNumber},</if>
            <if test="creditCode != null">#{creditCode},</if>
        </trim>
    </insert>
    <insert id="batchInsertCompany">
        INSERT INTO t_company (id, code, company_name, properties, industry,industry_category,industry_subcategory,
        legal, capital_reg, capital_pay_type,
        source_id, source_type, website, addr, addr_detail,
        zip_code, business_scope, remark,
        owner_id, dept_id, create_id, create_by, create_time,
        update_id, update_by, update_time,
        english_name,tax_code,emails,phone,
        reg_number,org_number,credit_code)
        VALUES
        <foreach collection="companyList" index="index" item="item" separator=",">
            (#{item.id}, #{item.code},#{item.companyName},#{item.properties},#{item.industry},#{item.industryCategory},#{item.industrySubcategory}
            ,#{item.legal},#{item.capitalReg},#{item.capitalPayType}
            ,#{item.sourceId},#{item.sourceType},#{item.website},#{item.addr},#{item.addrDetail}
            ,#{item.zipCode},#{item.businessScope},#{item.remark}
            ,#{item.ownerId},#{item.deptId},#{item.createId},#{item.createBy},#{item.createTime}
            ,#{item.updateId},#{item.updateBy},#{item.updateTime},
            #{item.englishName},#{item.taxCode},#{item.emails},#{item.phone},
            #{item.regNumber},#{item.orgNumber},#{item.creditCode},)
        </foreach>
    </insert>
    <update id="updateCompany" parameterType="Company">
        update t_company
        <trim prefix="SET" suffixOverrides=",">
            <if test="companyName != null">company_name = #{companyName},</if>
            <if test="properties != null">properties = #{properties},</if>
            <if test="industry != null">industry = #{industry},</if>
            <if test="industryCategory != null">industry_category = #{industryCategory},</if>
            <if test="industrySubcategory != null">industry_subcategory = #{industrySubcategory},</if>
            <if test="legal != null">legal = #{legal},</if>
            <if test="capitalReg != null">capital_reg = #{capitalReg},</if>
            <if test="capitalPayType != null">capital_pay_type = #{capitalPayType},</if>
            <if test="sourceType != null">source_type = #{sourceType},</if>
            <if test="website != null">website = #{website},</if>
            <if test="addr != null">addr = #{addr},</if>
            <if test="addrDetail != null">addr_detail = #{addrDetail},</if>
            <if test="zipCode != null">zip_code = #{zipCode},</if>
            <if test="businessScope != null">business_scope = #{businessScope},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="sourceId != null">source_id = #{sourceId},</if>
            <if test="ownerId != null">owner_id = #{ownerId},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="createId != null">create_id = #{createId},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateId != null">update_id = #{updateId},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="englishName != null">english_name = #{englishName},</if>
            <if test="taxCode != null">tax_code = #{taxCode},</if>
            <if test="emails != null">emails = #{emails},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="regNumber != null">reg_number = #{regNumber},</if>
            <if test="orgNumber != null">org_number = #{orgNumber},</if>
            <if test="creditCode != null">credit_code = #{creditCode},</if>
        </trim>
        where id = #{id}
    </update>
    <update id="changeCompanyOwners">
        update t_company
        <trim prefix="SET" suffixOverrides=",">
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="ownerId != null">owner_id = #{ownerId},</if>
            <if test="remark != null">remark = concat_ws(';',remark,#{remark}),</if>
        </trim>
        where code in
        <foreach collection="params.selectedCodes" separator="," item="code" index="index" close=")"
                 open="(">
            #{code}
        </foreach>
    </update>
    <delete id="deleteCompanyById" parameterType="String">
        delete
        from t_company
        where id = #{id}
    </delete>

    <delete id="deleteCompanyByIds" parameterType="String">
        delete from t_company where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <select id="selectOppoList" resultMap="com.highgo.crm.mapper.OpportunityUnitedMapper.OpportunityUnitedResult"
            parameterType="Company">
        select tc.id,
               tc.code,
               tc.current_stage,
               tc.name,
               tc.cust_id,
               tc2.company_name                                                             cust_name,
               tc.dept_id,
               tc.owner_id,
               su.user_name                                                                 owner_name,
               su.nick_name                                                                 nick_name,
               tc.shared_id,
               tc.shared_dept_id,
               tc.create_time,
               tc.update_time,
               tc.remark,
               max(case when top.property_key = 'preTenderDate' then top.property_val end)  preTenderDate,
               max(case when top.property_key = 'preSignDate' then top.property_val end)    preSignDate,
               max(case when top.property_key = 'preContractVal' then top.property_val end) preContractVal
        from t_opportunity tc
                 left join t_company tc2 on tc.cust_id = tc2.id
                 left join t_opportunity_property top on (top.status = '0' and tc.code = top.opportunity_code and
                                                          top.property_key in ('preTenderDate', 'preSignDate', 'preContractVal'))
                 left join remote_db.sys_dept sd on tc.dept_id = sd.dept_id
                 left join remote_db.sys_user su on su.user_id = tc.owner_id
        where tc.code in (
            select top2.opportunity_code
                from t_opportunity_property top2
                where top2.model = 'cust'
                  and top2.property_key = 'userCompanyid'
                  and top2.property_val = #{id}
            union
            select opportunity_code
                from t_opportunity_software_operation toso
                where operational_id = #{id}
            union
                select toso.opportunity_code
                from t_opportunity_software_operation toso,
                     t_application ta
                where ta.isv = #{id}
                  and ta.id = toso.application_id
        )
        group by code
    </select>
    <select id="selectApplicationList" parameterType="Company" resultMap="com.highgo.crm.mapper.ApplicationMapper.ApplicationResult">
        select * from t_application ta where isv=#{id} or source_id =#{id}
    </select>
    <select id="selectContactList" parameterType="Company" resultMap="com.highgo.crm.mapper.ContactMapper.ContactResult">
        select * from t_contact tc
        <where>
            <if test="code != null  and code != ''">or tc.company_code =#{code} </if>
            <if test="id != null  and id != ''"> or tc.source_id =#{id} </if>
        </where>
    </select>
</mapper>